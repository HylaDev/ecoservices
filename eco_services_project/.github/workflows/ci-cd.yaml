name: Symfony CI/CD Pipeline

on:
  push:
    branches:
      - test

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2.19'  # Assurez-vous que la version PHP correspond Ã  celle de votre projet

      - name: Install dependencies
        run: composer install

      - name: Run HTML linting
        run: |
          find ./templates/*/ -name '*.html.twig' | xargs -I{} html-validator-cli --file {}
        env:
          NODE_ENV: 'production'

      - name: Run PHP linter
        run: composer run-script lint

  docker:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-app:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/symfony-app:${{ github.sha }}

  tag:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create tag
        id: tag
        run: |
          CURRENT_VERSION=$(git tag --list | sort -V | tail -n 1)
          NEW_VERSION=$(semver bump patch $CURRENT_VERSION)
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          git tag -a $NEW_VERSION -m "Release $NEW_VERSION"
          git push origin $NEW_VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

      - name: Push Docker image with tag
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/symfony-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/symfony-app:${{ env.NEW_VERSION }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push tagged Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/symfony-app:${{ env.NEW_VERSION }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
